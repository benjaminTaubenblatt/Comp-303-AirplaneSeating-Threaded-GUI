
package comp303hw2;

import java.util.Arrays;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 * @author benjamintaubenblatt
 * COMP 303 Assignment 2 
 * ID: 260626105
 */
public class GUIAirplaneSeating extends javax.swing.JFrame implements Observer {
    private SeatingReservationScheme manager;
    /**
     * Creates new GUIAirplaneSeating viewer.
     */
    public GUIAirplaneSeating(SeatingReservationScheme seatMe) {
        
        this.manager = seatMe; 
        initComponents();
    }

    private GUIAirplaneSeating() {
        throw new UnsupportedOperationException("Not supported yet."); 
    }
    /**
     * This method formats our seating arrangement. 
     * @param arrangeSeat The 2D array.
     * @return The string representation of the array. 
     */
    public String refactorStringRep(int[][] arrangeSeat) {
        
        String representation = "";
        for (int i = 0; i < arrangeSeat.length; i++) {
            if(i>=0 && i<9){
                
                representation = representation + "Row 0" + (i+1) + ": "; //i+1 for user commands (1,1) being top left corner seat
                
            } else {
                
                representation = representation + "Row " + (i+1) + ": ";
                
            }
            
            for (int j = 0; j < arrangeSeat[0].length; j++) {
                
                representation = representation + "      " + arrangeSeat[i][j] + "      ";
                
            }
            representation = representation + "\n\n\n";
        }
        
        return representation;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textFieldSeats = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Row: ");

        cField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Column: ");

        jButton1.setText("Reserve ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textFieldSeats.setEditable(false);
        textFieldSeats.setColumns(20);
        textFieldSeats.setLineWrap(true);
        textFieldSeats.setRows(5);
        textFieldSeats.setWrapStyleWord(true);
        textFieldSeats.setAutoscrolls(false);
        jScrollPane1.setViewportView(textFieldSeats);

        jLabel1.setText("Agent ID: 3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rField)
                            .addComponent(cField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(469, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cFieldActionPerformed
/**
 * This event is for when the reserve button is clicked. It checks to see if the
 * input is valid and triggers our airplane seater. 
 * @param evt The button is clicked. 
 */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int rw = 0;
        int cm = 0;        
        try{
            rw = Integer.parseInt(rField.getText());
            cm = Integer.parseInt(cField.getText());
            manager.reserveSeat(rw, cm, 3); //reserve our seat 
            
            JOptionPane.showMessageDialog(null,"Thank you for reserving your seat! We value you as a customer!");
            
            if(rw < 0 || cm < 0){ //error messages
                throw new NumberFormatException();             
            }
            else if(rField.getText() == null || cField.getText() == null){
                throw new NumberFormatException(); 
            } 
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Please insert a positive number only!");
            
        } catch (IllegalArgumentException d){
            JOptionPane.showMessageDialog(null, d.getMessage());
            
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void rFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rFieldActionPerformed

   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIAirplaneSeating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIAirplaneSeating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIAirplaneSeating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIAirplaneSeating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIAirplaneSeating().setVisible(true);
            }
        });
    }
     
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField rField;
    private javax.swing.JTextArea textFieldSeats;
    // End of variables declaration//GEN-END:variables
    /**
     * This method updates our GUI after a change has been made.
     * @param o An Observable aObservable to be observed.
     * @param arg A parameter of the Observer interface. 
     */
    @Override
    public void update(Observable o, Object arg) {
        
        int[][] planeSeats = manager.getSeatings();
        
        SwingUtilities.invokeLater(new Runnable() { //Allows our GUI to be redrawn asynchronously when the reservations have changed
            public void run() { // (Uses anonymous classes) 
                textFieldSeats.setText(refactorStringRep(planeSeats)); //Fills our text field
                textFieldSeats.setCaretPosition(0); //Makes our cursor return to the top instead of bottom 
            }
        });
    }
}
